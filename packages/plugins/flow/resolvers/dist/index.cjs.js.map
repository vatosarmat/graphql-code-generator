{"version":3,"file":"index.cjs.js","sources":["../../../dist/plugins/flow/resolvers/src/flow-util-types.js","../../../dist/plugins/flow/resolvers/src/visitor.js","../../../dist/plugins/flow/resolvers/src/index.js"],"sourcesContent":["export const FLOW_REQUIRE_FIELDS_TYPE = `export type $RequireFields<Origin, Keys> = $Diff<Origin, Keys> & $ObjMapi<Keys, <Key>(k: Key) => $NonMaybeType<$ElementType<Origin, Key>>>;`;\n//# sourceMappingURL=flow-util-types.js.map","import autoBind from 'auto-bind';\nimport { indent, BaseResolversVisitor, DeclarationBlock, } from '@graphql-codegen/visitor-plugin-common';\nimport { FlowOperationVariablesToObject } from '@graphql-codegen/flow';\nimport { FLOW_REQUIRE_FIELDS_TYPE } from './flow-util-types';\nexport const ENUM_RESOLVERS_SIGNATURE = 'export type EnumResolverSignature<T, AllowedValues = any> = $ObjMap<T, () => AllowedValues>;';\nexport class FlowResolversVisitor extends BaseResolversVisitor {\n    constructor(pluginConfig, schema) {\n        super(pluginConfig, null, schema);\n        autoBind(this);\n        this.setVariablesTransformer(new FlowOperationVariablesToObject(this.scalars, this.convertName, this.config.namespacedImportName));\n    }\n    _getScalar(name) {\n        return `$ElementType<Scalars, '${name}'>`;\n    }\n    applyRequireFields(argsType, fields) {\n        this._globalDeclarations.add(FLOW_REQUIRE_FIELDS_TYPE);\n        return `$RequireFields<${argsType}, { ${fields.map(f => `${f.name.value}: *`).join(', ')} }>`;\n    }\n    applyOptionalFields(argsType, _fields) {\n        return argsType;\n    }\n    buildMapperImport(source, types) {\n        if (types[0] && types[0].asDefault) {\n            return `import type ${types[0].identifier} from '${source}';`;\n        }\n        return `import { ${types.map(t => `type ${t.identifier}`).join(', ')} } from '${source}';`;\n    }\n    formatRootResolver(schemaTypeName, resolverType, declarationKind) {\n        return `${schemaTypeName}?: ${resolverType}${resolverType.includes('<') ? '' : '<>'}${this.getPunctuation(declarationKind)}`;\n    }\n    transformParentGenericType(parentType) {\n        return `ParentType = ${parentType}`;\n    }\n    ListType(node) {\n        return `?${super.ListType(node)}`;\n    }\n    NamedType(node) {\n        return `?${super.NamedType(node)}`;\n    }\n    NonNullType(node) {\n        const baseValue = super.NonNullType(node);\n        if (baseValue.startsWith('?')) {\n            return baseValue.substr(1);\n        }\n        return baseValue;\n    }\n    applyMaybe(str) {\n        return `?${str}`;\n    }\n    clearMaybe(str) {\n        if (str.startsWith('?')) {\n            return str.substr(1);\n        }\n        return str;\n    }\n    getTypeToUse(name) {\n        const resolversType = this.convertName('ResolversTypes');\n        return `$ElementType<${resolversType}, '${name}'>`;\n    }\n    getParentTypeToUse(name) {\n        const resolversType = this.convertName('ResolversParentTypes');\n        return `$ElementType<${resolversType}, '${name}'>`;\n    }\n    replaceFieldsInType(typeName, relevantFields) {\n        return `$Diff<${typeName}, { ${relevantFields\n            .map(f => `${f.fieldName}: * `)\n            .join(', ')} }> & { ${relevantFields.map(f => `${f.fieldName}: ${f.replaceWithType}`).join(', ')} }`;\n    }\n    ScalarTypeDefinition(node) {\n        const nameAsString = node.name;\n        const baseName = this.getTypeToUse(nameAsString);\n        this._collectedResolvers[node.name] = 'GraphQLScalarType';\n        return new DeclarationBlock({\n            ...this._declarationBlockConfig,\n            blockTransformer(block) {\n                return block;\n            },\n        })\n            .export()\n            .asKind('type')\n            .withName(this.convertName(node, {\n            suffix: 'ScalarConfig',\n        }))\n            .withBlock([indent(`...GraphQLScalarTypeConfig<${baseName}, any>`), indent(`name: '${node.name}'`)].join(', \\n'))\n            .string;\n    }\n    getPunctuation(declarationKind) {\n        return declarationKind === 'type' ? ',' : ';';\n    }\n    buildEnumResolverContentBlock(node, mappedEnumType) {\n        const valuesMap = `{| ${(node.values || [])\n            .map(v => `${v.name}${this.config.avoidOptionals ? '' : '?'}: *`)\n            .join(', ')} |}`;\n        this._globalDeclarations.add(ENUM_RESOLVERS_SIGNATURE);\n        return `EnumResolverSignature<${valuesMap}, ${mappedEnumType}>`;\n    }\n    buildEnumResolversExplicitMappedValues(node, valuesMapping) {\n        return `{| ${(node.values || [])\n            .map(v => {\n            const valueName = v.name;\n            const mappedValue = valuesMapping[valueName];\n            return `${valueName}: ${typeof mappedValue === 'number' ? mappedValue : `'${mappedValue}'`}`;\n        })\n            .join(', ')} |}`;\n    }\n}\n//# sourceMappingURL=visitor.js.map","import { printSchemaWithDirectives } from '@graphql-tools/utils';\nimport { addFederationReferencesToSchema } from '@graphql-codegen/plugin-helpers';\nimport { parse, printSchema, visit } from 'graphql';\nimport { FlowResolversVisitor } from './visitor';\nexport const plugin = (schema, documents, config) => {\n    const imports = ['type GraphQLResolveInfo'];\n    const showUnusedMappers = typeof config.showUnusedMappers === 'boolean' ? config.showUnusedMappers : true;\n    const gqlImports = `import { ${imports.join(', ')} } from 'graphql';`;\n    const transformedSchema = config.federation ? addFederationReferencesToSchema(schema) : schema;\n    const printedSchema = config.federation\n        ? printSchemaWithDirectives(transformedSchema)\n        : printSchema(transformedSchema);\n    const astNode = parse(printedSchema);\n    const visitor = new FlowResolversVisitor(config, transformedSchema);\n    const visitorResult = visit(astNode, { leave: visitor });\n    const defsToInclude = [visitor.getResolverTypeWrapperSignature()];\n    if (visitor.hasFederation()) {\n        defsToInclude.push(`\n    export type ReferenceResolver<TResult, TReference, TContext> = (\n      reference: TReference,\n      context: TContext,\n      info: GraphQLResolveInfo\n    ) => Promise<TResult> | TResult;\n    `);\n        defsToInclude.push(`export type RecursivePick<T, U> = T`);\n    }\n    const header = `export type Resolver<Result, Parent = {}, Context = {}, Args = {}> = (\n  parent: Parent,\n  args: Args,\n  context: Context,\n  info: GraphQLResolveInfo\n) => Promise<Result> | Result;\n\nexport type SubscriptionSubscribeFn<Result, Parent, Context, Args> = (\n  parent: Parent,\n  args: Args,\n  context: Context,\n  info: GraphQLResolveInfo\n) => AsyncIterator<Result> | Promise<AsyncIterator<Result>>;\n\nexport type SubscriptionResolveFn<Result, Parent, Context, Args> = (\n  parent: Parent,\n  args: Args,\n  context: Context,\n  info: GraphQLResolveInfo\n) => Result | Promise<Result>;\n\nexport interface SubscriptionSubscriberObject<Result, Key: string, Parent, Context, Args> {\n  subscribe: SubscriptionSubscribeFn<{ [key: Key]: Result }, Parent, Context, Args>;\n  resolve?: SubscriptionResolveFn<Result, { [key: Key]: Result }, Context, Args>;\n}\n\nexport interface SubscriptionResolverObject<Result, Parent, Context, Args> {\n  subscribe: SubscriptionSubscribeFn<mixed, Parent, Context, Args>;\n  resolve: SubscriptionResolveFn<Result, mixed, Context, Args>;\n}\n\nexport type SubscriptionObject<Result, Key: string, Parent, Context, Args> =\n  | SubscriptionSubscriberObject<Result, Key, Parent, Context, Args>\n  | SubscriptionResolverObject<Result, Parent, Context, Args>;\n\nexport type SubscriptionResolver<Result, Key: string, Parent = {}, Context = {}, Args = {}> =\n  | ((...args: Array<any>) => SubscriptionObject<Result, Key, Parent, Context, Args>)\n  | SubscriptionObject<Result, Key, Parent, Context, Args>;\n\nexport type TypeResolveFn<Types, Parent = {}, Context = {}> = (\n  parent: Parent,\n  context: Context,\n  info: GraphQLResolveInfo\n) => ?Types | Promise<?Types>;\n\nexport type IsTypeOfResolverFn<T = {}, Context = {}> = (obj: T, context: Context, info: GraphQLResolveInfo) => boolean | Promise<boolean>;\n\nexport type NextResolverFn<T> = () => Promise<T>;\n\nexport type DirectiveResolverFn<Result = {}, Parent = {}, Args = {}, Context = {}> = (\n  next: NextResolverFn<Result>,\n  parent: Parent,\n  args: Args,\n  context: Context,\n  info: GraphQLResolveInfo\n) => Result | Promise<Result>;\n\n${defsToInclude.join('\\n')}\n`;\n    const resolversTypeMapping = visitor.buildResolversTypes();\n    const resolversParentTypeMapping = visitor.buildResolversParentTypes();\n    const { getRootResolver, getAllDirectiveResolvers, mappersImports, unusedMappers, hasScalars } = visitor;\n    if (hasScalars()) {\n        imports.push('type GraphQLScalarTypeConfig');\n    }\n    if (showUnusedMappers && unusedMappers.length) {\n        // eslint-disable-next-line no-console\n        console.warn(`Unused mappers: ${unusedMappers.join(',')}`);\n    }\n    return {\n        prepend: [gqlImports, ...mappersImports, ...visitor.globalDeclarations],\n        content: [\n            header,\n            resolversTypeMapping,\n            resolversParentTypeMapping,\n            ...visitorResult.definitions.filter(d => typeof d === 'string'),\n            getRootResolver(),\n            getAllDirectiveResolvers(),\n        ].join('\\n'),\n    };\n};\n//# sourceMappingURL=index.js.map"],"names":["BaseResolversVisitor","FlowOperationVariablesToObject","DeclarationBlock","indent","addFederationReferencesToSchema","printSchemaWithDirectives","printSchema","parse","visit"],"mappings":"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"}