{"version":3,"file":"index.cjs.js","sources":["../../../dist/plugins/flow/operations/src/flow-selection-set-processor.js","../../../dist/plugins/flow/operations/src/visitor.js","../../../dist/plugins/flow/operations/src/index.js"],"sourcesContent":["import { BaseSelectionSetProcessor, indent, } from '@graphql-codegen/visitor-plugin-common';\nexport class FlowWithPickSelectionSetProcessor extends BaseSelectionSetProcessor {\n    transformAliasesPrimitiveFields(schemaType, fields) {\n        if (fields.length === 0) {\n            return [];\n        }\n        const useFlowExactObject = this.config.useFlowExactObjects;\n        const formatNamedField = this.config.formatNamedField;\n        const fieldObj = schemaType.getFields();\n        const parentName = (this.config.namespacedImportName ? `${this.config.namespacedImportName}.` : '') +\n            this.config.convertName(schemaType.name, {\n                useTypesPrefix: true,\n            });\n        return [\n            `{${useFlowExactObject ? '|' : ''} ${fields\n                .map(aliasedField => `${formatNamedField(aliasedField.alias, fieldObj[aliasedField.fieldName].type)}: $ElementType<${parentName}, '${aliasedField.fieldName}'>`)\n                .join(', ')} ${useFlowExactObject ? '|' : ''}}`,\n        ];\n    }\n    buildFieldsIntoObject(allObjectsMerged) {\n        return `...{ ${allObjectsMerged.join(', ')} }`;\n    }\n    buildSelectionSetFromStrings(pieces) {\n        if (pieces.length === 0) {\n            return null;\n        }\n        else if (pieces.length === 1) {\n            return pieces[0];\n        }\n        else {\n            return `({\\n  ${pieces.map(t => indent(`...${t}`)).join(`,\\n`)}\\n})`;\n        }\n    }\n    transformLinkFields(fields) {\n        if (fields.length === 0) {\n            return [];\n        }\n        const useFlowExactObject = this.config.useFlowExactObjects;\n        return [\n            `{${useFlowExactObject ? '|' : ''} ${fields\n                .map(field => `${field.alias || field.name}: ${field.selectionSet}`)\n                .join(', ')} ${useFlowExactObject ? '|' : ''}}`,\n        ];\n    }\n    transformPrimitiveFields(schemaType, fields) {\n        if (fields.length === 0) {\n            return [];\n        }\n        const useFlowExactObject = this.config.useFlowExactObjects;\n        const formatNamedField = this.config.formatNamedField;\n        const parentName = (this.config.namespacedImportName ? `${this.config.namespacedImportName}.` : '') +\n            this.config.convertName(schemaType.name, {\n                useTypesPrefix: true,\n            });\n        const fieldObj = schemaType.getFields();\n        return [\n            `$Pick<${parentName}, {${useFlowExactObject ? '|' : ''} ${fields\n                .map(fieldName => `${formatNamedField(fieldName, fieldObj[fieldName].type)}: *`)\n                .join(', ')} ${useFlowExactObject ? '|' : ''}}>`,\n        ];\n    }\n    transformTypenameField(type, name) {\n        return [`{ ${name}: ${type} }`];\n    }\n}\n//# sourceMappingURL=flow-selection-set-processor.js.map","import { FlowWithPickSelectionSetProcessor } from './flow-selection-set-processor';\nimport { isEnumType, isNonNullType } from 'graphql';\nimport { FlowOperationVariablesToObject } from '@graphql-codegen/flow';\nimport { wrapTypeWithModifiers, PreResolveTypesProcessor, BaseDocumentsVisitor, SelectionSetToObject, getConfigValue, generateFragmentImportStatement, } from '@graphql-codegen/visitor-plugin-common';\nimport autoBind from 'auto-bind';\nexport class FlowDocumentsVisitor extends BaseDocumentsVisitor {\n    constructor(schema, config, allFragments) {\n        super(config, {\n            useFlowExactObjects: getConfigValue(config.useFlowExactObjects, true),\n            useFlowReadOnlyTypes: getConfigValue(config.useFlowReadOnlyTypes, false),\n        }, schema);\n        autoBind(this);\n        const wrapArray = (type) => `${this.config.useFlowReadOnlyTypes ? '$ReadOnlyArray' : 'Array'}<${type}>`;\n        const wrapOptional = (type) => `?${type}`;\n        const useFlowReadOnlyTypes = this.config.useFlowReadOnlyTypes;\n        const formatNamedField = (name, type) => {\n            const optional = !!type && !isNonNullType(type);\n            return `${useFlowReadOnlyTypes ? '+' : ''}${name}${optional ? '?' : ''}`;\n        };\n        const processorConfig = {\n            namespacedImportName: this.config.namespacedImportName,\n            convertName: this.convertName.bind(this),\n            enumPrefix: this.config.enumPrefix,\n            scalars: this.scalars,\n            formatNamedField,\n            wrapTypeWithModifiers(baseType, type) {\n                return wrapTypeWithModifiers(baseType, type, { wrapOptional, wrapArray });\n            },\n        };\n        const processor = config.preResolveTypes\n            ? new PreResolveTypesProcessor(processorConfig)\n            : new FlowWithPickSelectionSetProcessor({\n                ...processorConfig,\n                useFlowExactObjects: this.config.useFlowExactObjects,\n            });\n        const enumsNames = Object.keys(schema.getTypeMap()).filter(typeName => isEnumType(schema.getType(typeName)));\n        this.setSelectionSetHandler(new SelectionSetToObject(processor, this.scalars, this.schema, this.convertName.bind(this), this.getFragmentSuffix.bind(this), allFragments, this.config));\n        this.setVariablesTransformer(new FlowOperationVariablesToObject(this.scalars, this.convertName.bind(this), this.config.namespacedImportName, enumsNames, this.config.enumPrefix));\n    }\n    getPunctuation(declarationKind) {\n        return declarationKind === 'type' ? ',' : ';';\n    }\n    getImports() {\n        return !this.config.globalNamespace\n            ? this.config.fragmentImports\n                // In flow, all non ` * as x` imports must be type imports\n                .map(fragmentImport => ({ ...fragmentImport, typesImport: true }))\n                .map(fragmentImport => generateFragmentImportStatement(fragmentImport, 'type'))\n            : [];\n    }\n}\n//# sourceMappingURL=visitor.js.map","import { visit, concatAST, Kind } from 'graphql';\nimport { FlowDocumentsVisitor } from './visitor';\nimport { optimizeOperations } from '@graphql-codegen/visitor-plugin-common';\nexport const plugin = (schema, rawDocuments, config) => {\n    const documents = config.flattenGeneratedTypes\n        ? optimizeOperations(schema, rawDocuments, { includeFragments: true })\n        : rawDocuments;\n    const prefix = config.preResolveTypes\n        ? ''\n        : `type $Pick<Origin: Object, Keys: Object> = $ObjMapi<Keys, <Key>(k: Key) => $ElementType<Origin, Key>>;\\n`;\n    const allAst = concatAST(documents.map(v => v.document));\n    const includedFragments = allAst.definitions.filter(d => d.kind === Kind.FRAGMENT_DEFINITION);\n    const allFragments = [\n        ...includedFragments.map(fragmentDef => ({\n            node: fragmentDef,\n            name: fragmentDef.name.value,\n            onType: fragmentDef.typeCondition.name.value,\n            isExternal: false,\n        })),\n        ...(config.externalFragments || []),\n    ];\n    const visitor = new FlowDocumentsVisitor(schema, config, allFragments);\n    const visitorResult = visit(allAst, {\n        leave: visitor,\n    });\n    return {\n        prepend: ['// @flow\\n', ...visitor.getImports()],\n        content: [prefix, ...visitorResult.definitions].join('\\n'),\n    };\n};\n//# sourceMappingURL=index.js.map"],"names":["BaseSelectionSetProcessor","indent","BaseDocumentsVisitor","getConfigValue","isNonNullType","wrapTypeWithModifiers","PreResolveTypesProcessor","isEnumType","SelectionSetToObject","FlowOperationVariablesToObject","generateFragmentImportStatement","optimizeOperations","concatAST","Kind","visit"],"mappings":"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"}