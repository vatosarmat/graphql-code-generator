{"version":3,"file":"index.cjs.js","sources":["../../../dist/plugins/typescript/apollo-angular/src/visitor.js","../../../dist/plugins/typescript/apollo-angular/src/index.js"],"sourcesContent":["import { ClientSideBaseVisitor, DocumentMode, indentMultiline, getConfigValue, } from '@graphql-codegen/visitor-plugin-common';\nimport autoBind from 'auto-bind';\nimport { print, visit, Kind } from 'graphql';\nimport { camelCase } from 'camel-case';\nconst R_MOD = /module:\\s*\"([^\"]+)\"/; // matches: module: \"...\"\nconst R_NAME = /name:\\s*\"([^\"]+)\"/; // matches: name: \"...\"\nfunction R_DEF(directive) {\n    return new RegExp(`\\\\s+\\\\@${directive}\\\\([^)]+\\\\)`, 'gm');\n}\nexport class ApolloAngularVisitor extends ClientSideBaseVisitor {\n    constructor(schema, fragments, _allOperations, rawConfig, documents) {\n        super(schema, fragments, rawConfig, {\n            sdkClass: rawConfig.sdkClass,\n            ngModule: rawConfig.ngModule,\n            namedClient: rawConfig.namedClient,\n            serviceName: rawConfig.serviceName,\n            serviceProvidedIn: rawConfig.serviceProvidedIn,\n            serviceProvidedInRoot: rawConfig.serviceProvidedInRoot,\n            querySuffix: rawConfig.querySuffix,\n            mutationSuffix: rawConfig.mutationSuffix,\n            subscriptionSuffix: rawConfig.subscriptionSuffix,\n            apolloAngularPackage: getConfigValue(rawConfig.apolloAngularPackage, 'apollo-angular'),\n            apolloAngularVersion: getConfigValue(rawConfig.apolloAngularVersion, 2),\n            gqlImport: getConfigValue(rawConfig.gqlImport, !rawConfig.apolloAngularVersion || rawConfig.apolloAngularVersion === 2 ? `apollo-angular#gql` : null),\n        }, documents);\n        this._allOperations = _allOperations;\n        this._externalImportPrefix = '';\n        this._operationsToInclude = [];\n        if (this.config.importOperationTypesFrom) {\n            this._externalImportPrefix = `${this.config.importOperationTypesFrom}.`;\n            if (this.config.documentMode !== DocumentMode.external || !this.config.importDocumentNodeExternallyFrom) {\n                // eslint-disable-next-line no-console\n                console.warn('\"importOperationTypesFrom\" should be used with \"documentMode=external\" and \"importDocumentNodeExternallyFrom\"');\n            }\n            if (this.config.importOperationTypesFrom !== 'Operations') {\n                // eslint-disable-next-line no-console\n                console.warn('importOperationTypesFrom only works correctly when left empty or set to \"Operations\"');\n            }\n        }\n        autoBind(this);\n    }\n    getImports() {\n        const baseImports = super.getImports();\n        const hasOperations = this._collectedOperations.length > 0;\n        if (!hasOperations) {\n            return baseImports;\n        }\n        const imports = [\n            `import { Injectable } from '@angular/core';`,\n            `import * as Apollo from '${this.config.apolloAngularPackage}';`,\n        ];\n        if (this.config.sdkClass) {\n            const corePackage = this.config.apolloAngularVersion > 1 ? '@apollo/client/core' : 'apollo-client';\n            imports.push(`import * as ApolloCore from '${corePackage}';`);\n        }\n        const defs = {};\n        this._allOperations\n            .filter(op => this._operationHasDirective(op, 'NgModule') || !!this.config.ngModule)\n            .forEach(op => {\n            const def = this._operationHasDirective(op, 'NgModule')\n                ? this._extractNgModule(op)\n                : this._parseNgModule(this.config.ngModule);\n            // by setting key as link we easily get rid of duplicated imports\n            // every path should be relative to the output file\n            defs[def.link] = {\n                path: def.path,\n                module: def.module,\n            };\n        });\n        if (this.config.serviceProvidedIn) {\n            const ngModule = this._parseNgModule(this.config.serviceProvidedIn);\n            defs[ngModule.link] = {\n                path: ngModule.path,\n                module: ngModule.module,\n            };\n        }\n        Object.keys(defs).forEach(key => {\n            const def = defs[key];\n            // Every Angular Module that I've seen in my entire life use named exports\n            imports.push(`import { ${def.module} } from '${def.path}';`);\n        });\n        return [...baseImports, ...imports];\n    }\n    _extractNgModule(operation) {\n        const [, link] = print(operation).match(R_MOD);\n        return this._parseNgModule(link);\n    }\n    _parseNgModule(link) {\n        const [path, module] = link.split('#');\n        return {\n            path,\n            module,\n            link,\n        };\n    }\n    _operationHasDirective(operation, directive) {\n        if (typeof operation === 'string') {\n            return operation.includes(`@${directive}`);\n        }\n        let found = false;\n        visit(operation, {\n            Directive(node) {\n                if (node.name.value === directive) {\n                    found = true;\n                }\n            },\n        });\n        return found;\n    }\n    _removeDirective(document, directive) {\n        if (this._operationHasDirective(document, directive)) {\n            return document.replace(R_DEF(directive), '');\n        }\n        return document;\n    }\n    _removeDirectives(document, directives) {\n        return directives.reduce((doc, directive) => this._removeDirective(doc, directive), document);\n    }\n    _extractDirective(operation, directive) {\n        const directives = print(operation).match(R_DEF(directive));\n        if (directives.length > 1) {\n            throw new Error(`The ${directive} directive used multiple times in '${operation.name}' operation`);\n        }\n        return directives[0];\n    }\n    _prepareDocument(documentStr) {\n        return this._removeDirectives(documentStr, ['NgModule', 'namedClient']);\n    }\n    _namedClient(operation) {\n        let name;\n        if (this._operationHasDirective(operation, 'namedClient')) {\n            name = this._extractNamedClient(operation);\n        }\n        else if (this.config.namedClient) {\n            name = this.config.namedClient;\n        }\n        return name ? `client = '${name}';` : '';\n    }\n    // tries to find namedClient directive and extract {name}\n    _extractNamedClient(operation) {\n        const [, name] = this._extractDirective(operation, 'namedClient').match(R_NAME);\n        return name;\n    }\n    _providedIn(operation) {\n        if (this._operationHasDirective(operation, 'NgModule')) {\n            return this._extractNgModule(operation).module;\n        }\n        else if (this.config.ngModule) {\n            return this._parseNgModule(this.config.ngModule).module;\n        }\n        return `'root'`;\n    }\n    _getDocumentNodeVariable(node, documentVariableName) {\n        return this.config.importOperationTypesFrom\n            ? `${this.config.importOperationTypesFrom}.${documentVariableName}`\n            : documentVariableName;\n    }\n    _operationSuffix(operationType) {\n        const defaultSuffix = 'GQL';\n        switch (operationType) {\n            case 'Query':\n                return this.config.querySuffix || defaultSuffix;\n            case 'Mutation':\n                return this.config.mutationSuffix || defaultSuffix;\n            case 'Subscription':\n                return this.config.subscriptionSuffix || defaultSuffix;\n            default:\n                return defaultSuffix;\n        }\n    }\n    buildOperation(node, documentVariableName, operationType, operationResultType, operationVariablesTypes) {\n        const serviceName = `${this.convertName(node)}${this._operationSuffix(operationType)}`;\n        this._operationsToInclude.push({\n            node,\n            documentVariableName,\n            operationType,\n            operationResultType,\n            operationVariablesTypes,\n            serviceName,\n        });\n        operationResultType = this._externalImportPrefix + operationResultType;\n        operationVariablesTypes = this._externalImportPrefix + operationVariablesTypes;\n        const content = `\n  @Injectable({\n    providedIn: ${this._providedIn(node)}\n  })\n  export class ${serviceName} extends Apollo.${operationType}<${operationResultType}, ${operationVariablesTypes}> {\n    document = ${this._getDocumentNodeVariable(node, documentVariableName)};\n    ${this._namedClient(node)}\n    constructor(apollo: Apollo.Apollo) {\n      super(apollo);\n    }\n  }`;\n        return content;\n    }\n    get sdkClass() {\n        const actionType = operation => {\n            switch (operation) {\n                case 'Mutation':\n                    return 'mutate';\n                case 'Subscription':\n                    return 'subscribe';\n                default:\n                    return 'fetch';\n            }\n        };\n        const allPossibleActions = this._operationsToInclude\n            .map(o => {\n            const operationResultType = this._externalImportPrefix + o.operationResultType;\n            const operationVariablesTypes = this._externalImportPrefix + o.operationVariablesTypes;\n            const optionalVariables = !o.node.variableDefinitions ||\n                o.node.variableDefinitions.length === 0 ||\n                o.node.variableDefinitions.every(v => v.type.kind !== Kind.NON_NULL_TYPE || !!v.defaultValue);\n            const options = o.operationType === 'Mutation'\n                ? `${o.operationType}OptionsAlone<${operationResultType}, ${operationVariablesTypes}>`\n                : `${o.operationType}OptionsAlone<${operationVariablesTypes}>`;\n            const method = `\n${camelCase(o.node.name.value)}(variables${optionalVariables ? '?' : ''}: ${operationVariablesTypes}, options?: ${options}) {\n  return this.${camelCase(o.serviceName)}.${actionType(o.operationType)}(variables, options)\n}`;\n            let watchMethod;\n            if (o.operationType === 'Query') {\n                watchMethod = `\n\n${camelCase(o.node.name.value)}Watch(variables${optionalVariables ? '?' : ''}: ${operationVariablesTypes}, options?: WatchQueryOptionsAlone<${operationVariablesTypes}>) {\n  return this.${camelCase(o.serviceName)}.watch(variables, options)\n}`;\n            }\n            return [method, watchMethod].join('');\n        })\n            .map(s => indentMultiline(s, 2));\n        // Inject the generated services in the constructor\n        const injectString = (service) => `private ${camelCase(service)}: ${service}`;\n        const injections = this._operationsToInclude\n            .map(op => injectString(op.serviceName))\n            .map(s => indentMultiline(s, 3))\n            .join(',\\n');\n        const serviceName = this.config.serviceName || 'ApolloAngularSDK';\n        const providedIn = this.config.serviceProvidedIn\n            ? `{ providedIn: ${this._parseNgModule(this.config.serviceProvidedIn).module} }`\n            : this.config.serviceProvidedInRoot === false\n                ? ''\n                : `{ providedIn: 'root' }`;\n        return `\n  type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\n  interface WatchQueryOptionsAlone<V>\n    extends Omit<ApolloCore.WatchQueryOptions<V>, 'query' | 'variables'> {}\n    \n  interface QueryOptionsAlone<V>\n    extends Omit<ApolloCore.QueryOptions<V>, 'query' | 'variables'> {}\n    \n  interface MutationOptionsAlone<T, V>\n    extends Omit<ApolloCore.MutationOptions<T, V>, 'mutation' | 'variables'> {}\n    \n  interface SubscriptionOptionsAlone<V>\n    extends Omit<ApolloCore.SubscriptionOptions<V>, 'query' | 'variables'> {}\n\n  @Injectable(${providedIn})\n  export class ${serviceName} {\n    constructor(\n${injections}\n    ) {}\n  ${allPossibleActions.join('\\n')}\n  }`;\n    }\n}\n//# sourceMappingURL=visitor.js.map","import { visit, concatAST, Kind } from 'graphql';\nimport { ApolloAngularVisitor } from './visitor';\nimport { extname } from 'path';\nimport gql from 'graphql-tag';\nexport const plugin = (schema, documents, config) => {\n    const allAst = concatAST(documents.map(v => v.document));\n    const operations = allAst.definitions.filter(d => d.kind === Kind.OPERATION_DEFINITION);\n    const allFragments = [\n        ...allAst.definitions.filter(d => d.kind === Kind.FRAGMENT_DEFINITION).map(fragmentDef => ({\n            node: fragmentDef,\n            name: fragmentDef.name.value,\n            onType: fragmentDef.typeCondition.name.value,\n            isExternal: false,\n        })),\n        ...(config.externalFragments || []),\n    ];\n    const visitor = new ApolloAngularVisitor(schema, allFragments, operations, config, documents);\n    const visitorResult = visit(allAst, { leave: visitor });\n    return {\n        prepend: visitor.getImports(),\n        content: [\n            visitor.fragments,\n            ...visitorResult.definitions.filter(t => typeof t === 'string'),\n            config.sdkClass ? visitor.sdkClass : null,\n        ]\n            .filter(a => a)\n            .join('\\n'),\n    };\n};\nexport const addToSchema = gql `\n  directive @NgModule(module: String!) on OBJECT | FIELD\n  directive @namedClient(name: String!) on OBJECT | FIELD\n`;\nexport const validate = async (schema, documents, config, outputFile) => {\n    if (extname(outputFile) !== '.ts') {\n        throw new Error(`Plugin \"apollo-angular\" requires extension to be \".ts\"!`);\n    }\n};\nexport { ApolloAngularVisitor };\n//# sourceMappingURL=index.js.map"],"names":["ClientSideBaseVisitor","getConfigValue","DocumentMode","print","visit","Kind","camelCase","indentMultiline","concatAST","extname"],"mappings":"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"}