{"version":3,"file":"index.cjs.js","sources":["../../../dist/plugins/typescript/typed-document-node/src/visitor.js","../../../dist/plugins/typescript/typed-document-node/src/index.js"],"sourcesContent":["import autoBind from 'auto-bind';\nimport { ClientSideBaseVisitor, DocumentMode, } from '@graphql-codegen/visitor-plugin-common';\nexport class TypeScriptDocumentNodesVisitor extends ClientSideBaseVisitor {\n    constructor(schema, fragments, rawConfig, documents) {\n        super(schema, fragments, {\n            documentMode: DocumentMode.documentNodeImportFragments,\n            documentNodeImport: '@graphql-typed-document-node/core#TypedDocumentNode',\n            ...rawConfig,\n        }, {}, documents);\n        autoBind(this);\n        // We need to make sure it's there because in this mode, the base plugin doesn't add the import\n        if (this.config.documentMode === DocumentMode.graphQLTag) {\n            const documentNodeImport = this._parseImport(this.config.documentNodeImport || 'graphql#DocumentNode');\n            const tagImport = this._generateImport(documentNodeImport, 'DocumentNode', true);\n            this._imports.add(tagImport);\n        }\n    }\n    getDocumentNodeSignature(resultType, variablesTypes, node) {\n        if (this.config.documentMode === DocumentMode.documentNode ||\n            this.config.documentMode === DocumentMode.documentNodeImportFragments ||\n            this.config.documentMode === DocumentMode.graphQLTag) {\n            return `: DocumentNode<${resultType}, ${variablesTypes}>`;\n        }\n        return super.getDocumentNodeSignature(resultType, variablesTypes, node);\n    }\n}\n//# sourceMappingURL=visitor.js.map","import { visit, concatAST, Kind } from 'graphql';\nimport { extname } from 'path';\nimport { DocumentMode } from '@graphql-codegen/visitor-plugin-common';\nimport { TypeScriptDocumentNodesVisitor } from './visitor';\nexport const plugin = (schema, documents, config) => {\n    const allAst = concatAST(documents.map(v => v.document));\n    const allFragments = [\n        ...allAst.definitions.filter(d => d.kind === Kind.FRAGMENT_DEFINITION).map(fragmentDef => ({\n            node: fragmentDef,\n            name: fragmentDef.name.value,\n            onType: fragmentDef.typeCondition.name.value,\n            isExternal: false,\n        })),\n        ...(config.externalFragments || []),\n    ];\n    const visitor = new TypeScriptDocumentNodesVisitor(schema, allFragments, config, documents);\n    const visitorResult = visit(allAst, { leave: visitor });\n    return {\n        prepend: visitor.getImports(),\n        content: [visitor.fragments, ...visitorResult.definitions.filter(t => typeof t === 'string')].join('\\n'),\n    };\n};\nexport const validate = async (schema, documents, config, outputFile) => {\n    if (config && config.documentMode === DocumentMode.string) {\n        throw new Error(`Plugin \"typed-document-node\" does not allow using 'documentMode: string' configuration!`);\n    }\n    if (extname(outputFile) !== '.ts' && extname(outputFile) !== '.tsx') {\n        throw new Error(`Plugin \"typed-document-node\" requires extension to be \".ts\" or \".tsx\"!`);\n    }\n};\n//# sourceMappingURL=index.js.map"],"names":["ClientSideBaseVisitor","DocumentMode","concatAST","Kind","visit","extname"],"mappings":"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"}