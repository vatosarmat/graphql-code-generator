{"version":3,"file":"index.cjs.js","sources":["../../../dist/plugins/typescript/vue-apollo/src/visitor.js","../../../dist/plugins/typescript/vue-apollo/src/index.js"],"sourcesContent":["import { ClientSideBaseVisitor, getConfigValue, DocumentMode, } from '@graphql-codegen/visitor-plugin-common';\nimport autoBind from 'auto-bind';\nimport { pascalCase } from 'pascal-case';\nfunction insertIf(condition, ...elements) {\n    return condition ? elements : [];\n}\nexport class VueApolloVisitor extends ClientSideBaseVisitor {\n    constructor(schema, fragments, rawConfig, documents) {\n        super(schema, fragments, rawConfig, {\n            withCompositionFunctions: getConfigValue(rawConfig.withCompositionFunctions, true),\n            vueApolloComposableImportFrom: getConfigValue(rawConfig.vueApolloComposableImportFrom, '@vue/apollo-composable'),\n            vueCompositionApiImportFrom: getConfigValue(rawConfig.vueCompositionApiImportFrom, '@vue/composition-api'),\n            addDocBlocks: getConfigValue(rawConfig.addDocBlocks, true),\n        });\n        this.imports = new Set();\n        this.externalImportPrefix = this.config.importOperationTypesFrom ? `${this.config.importOperationTypesFrom}.` : '';\n        this._documents = documents;\n        autoBind(this);\n    }\n    get vueApolloComposableImport() {\n        return `import * as VueApolloComposable from '${this.config.vueApolloComposableImportFrom}';`;\n    }\n    get vueCompositionApiImport() {\n        if (this.config.useTypeImports) {\n            return `import type * as VueCompositionApi from '${this.config.vueCompositionApiImportFrom}';`;\n        }\n        return `import * as VueCompositionApi from '${this.config.vueCompositionApiImportFrom}';`;\n    }\n    get reactiveFunctionType() {\n        return 'export type ReactiveFunction<TParam> = () => TParam;';\n    }\n    getDocumentNodeVariable(node, documentVariableName) {\n        return this.config.documentMode === DocumentMode.external ? `Operations.${node.name.value}` : documentVariableName;\n    }\n    getImports() {\n        const baseImports = super.getImports();\n        const hasOperations = this._collectedOperations.length > 0;\n        if (!hasOperations) {\n            return baseImports;\n        }\n        return [...baseImports, ...Array.from(this.imports)];\n    }\n    buildCompositionFunctionsJSDoc(node, operationName, operationType) {\n        var _a, _b;\n        const operationHasVariables = ((_a = node.variableDefinitions) === null || _a === void 0 ? void 0 : _a.length) > 0;\n        const exampleVariablesString = (_b = node.variableDefinitions) === null || _b === void 0 ? void 0 : _b.reduce((accumulator, currentDefinition) => {\n            const name = currentDefinition.variable.name.value;\n            return `${accumulator}\\n *   ${operationType === 'Mutation' ? '  ' : ''}${name}: // value for '${name}'`;\n        }, '');\n        const exampleArguments = operationHasVariables\n            ? operationType === 'Mutation'\n                ? `{\n *   variables: {${exampleVariablesString}\n *   },\n * }`\n                : `{${exampleVariablesString}\n * }`\n            : '';\n        const queryDescription = `\n * To run a query within a Vue component, call \\`use${operationName}\\` and pass it any options that fit your needs.\n * When your component renders, \\`use${operationName}\\` returns an object from Apollo Client that contains result, loading and error properties\n * you can use to render your UI.`;\n        const queryExample = `\n * const { result, loading, error } = use${operationName}(${exampleArguments});`;\n        const mutationDescription = `\n * To run a mutation, you first call \\`use${operationName}\\` within a Vue component and pass it any options that fit your needs.\n * When your component renders, \\`use${operationName}\\` returns an object that includes:\n * - A mutate function that you can call at any time to execute the mutation\n * - Several other properties: https://v4.apollo.vuejs.org/api/use-mutation.html#return`;\n        const mutationExample = `\n * const { mutate, loading, error, onDone } = use${operationName}(${exampleArguments});`;\n        return `\n/**\n * __use${operationName}__\n *${operationType === 'Mutation' ? mutationDescription : queryDescription}\n *${operationHasVariables && operationType !== 'Mutation'\n            ? `\n * @param variables that will be passed into the ${operationType.toLowerCase()}`\n            : ''}\n * @param options that will be passed into the ${operationType.toLowerCase()}, supported options are listed on: https://v4.apollo.vuejs.org/guide-composable/${operationType === 'Mutation' ? 'mutation' : operationType === 'Subscription' ? 'subscription' : 'query'}.html#options;\n *\n * @example${operationType === 'Mutation' ? mutationExample : queryExample}\n */`;\n    }\n    getCompositionFunctionSuffix(name, operationType) {\n        if (!this.config.dedupeOperationSuffix) {\n            return this.config.omitOperationSuffix ? '' : pascalCase(operationType);\n        }\n        if (name.includes('Query') || name.includes('Mutation') || name.includes('Subscription')) {\n            return '';\n        }\n        return pascalCase(operationType);\n    }\n    buildOperation(node, documentVariableName, operationType, operationResultType, operationVariablesTypes) {\n        var _a, _b, _c;\n        operationResultType = this.externalImportPrefix + operationResultType;\n        operationVariablesTypes = this.externalImportPrefix + operationVariablesTypes;\n        if (!this.config.withCompositionFunctions) {\n            // todo - throw human readable error\n            return '';\n        }\n        if (!((_a = node.name) === null || _a === void 0 ? void 0 : _a.value)) {\n            // todo - throw human readable error\n            return '';\n        }\n        const suffix = this.getCompositionFunctionSuffix(node.name.value, operationType);\n        const operationName = this.convertName(node.name.value, {\n            suffix,\n            useTypesPrefix: false,\n        });\n        const operationHasVariables = ((_b = node.variableDefinitions) === null || _b === void 0 ? void 0 : _b.length) > 0;\n        const operationHasNonNullableVariable = !!((_c = node.variableDefinitions) === null || _c === void 0 ? void 0 : _c.some(({ type }) => type.kind === 'NonNullType'));\n        this.imports.add(this.vueApolloComposableImport);\n        this.imports.add(this.vueCompositionApiImport);\n        // hacky: technically not an import, but a typescript type that is required in the generated code\n        this.imports.add(this.reactiveFunctionType);\n        const documentNodeVariable = this.getDocumentNodeVariable(node, documentVariableName); // i.e. TestDocument\n        const compositionFunctionResultType = this.buildCompositionFunctionReturnType({\n            operationName,\n            operationType,\n            operationResultType,\n            operationVariablesTypes,\n        });\n        const compositionFunction = this.buildCompositionFunction({\n            operationName,\n            operationType,\n            operationResultType,\n            operationVariablesTypes,\n            operationHasNonNullableVariable,\n            operationHasVariables,\n            documentNodeVariable,\n        });\n        return [\n            ...insertIf(this.config.addDocBlocks, [this.buildCompositionFunctionsJSDoc(node, operationName, operationType)]),\n            compositionFunction,\n            compositionFunctionResultType,\n        ].join('\\n');\n    }\n    buildCompositionFunction({ operationName, operationType, operationResultType, operationVariablesTypes, operationHasNonNullableVariable, operationHasVariables, documentNodeVariable, }) {\n        const variables = operationHasVariables\n            ? `variables${operationHasNonNullableVariable ? '' : '?'}: ${operationVariablesTypes} | VueCompositionApi.Ref<${operationVariablesTypes}> | ReactiveFunction<${operationVariablesTypes}>, `\n            : '';\n        switch (operationType) {\n            case 'Query': {\n                return `export function use${operationName}(${variables}options: VueApolloComposable.UseQueryOptions<${operationResultType}, ${operationVariablesTypes}> | VueCompositionApi.Ref<VueApolloComposable.UseQueryOptions<${operationResultType}, ${operationVariablesTypes}>> | ReactiveFunction<VueApolloComposable.UseQueryOptions<${operationResultType}, ${operationVariablesTypes}>> = {}) {\n  return VueApolloComposable.useQuery<${operationResultType}, ${operationVariablesTypes}>(${documentNodeVariable}, ${operationHasVariables ? 'variables' : '{}'}, options);\n}`;\n            }\n            case 'Mutation': {\n                return `export function use${operationName}(options: VueApolloComposable.UseMutationOptions<${operationResultType}, ${operationVariablesTypes}> | ReactiveFunction<VueApolloComposable.UseMutationOptions<${operationResultType}, ${operationVariablesTypes}>>${operationHasNonNullableVariable ? '' : ' = {}'}) {\n  return VueApolloComposable.useMutation<${operationResultType}, ${operationVariablesTypes}>(${documentNodeVariable}, options);\n}`;\n            }\n            case 'Subscription': {\n                return `export function use${operationName}(${variables}options: VueApolloComposable.UseSubscriptionOptions<${operationResultType}, ${operationVariablesTypes}> | VueCompositionApi.Ref<VueApolloComposable.UseSubscriptionOptions<${operationResultType}, ${operationVariablesTypes}>> | ReactiveFunction<VueApolloComposable.UseSubscriptionOptions<${operationResultType}, ${operationVariablesTypes}>> = {}) {\n  return VueApolloComposable.useSubscription<${operationResultType}, ${operationVariablesTypes}>(${documentNodeVariable}, ${operationHasVariables ? 'variables' : '{}'}, options);\n}`;\n            }\n        }\n    }\n    buildCompositionFunctionReturnType({ operationName, operationType, operationResultType, operationVariablesTypes, }) {\n        return `export type ${operationName}CompositionFunctionResult = VueApolloComposable.Use${operationType}Return<${operationResultType}, ${operationVariablesTypes}>;`;\n    }\n}\n//# sourceMappingURL=visitor.js.map","import { visit, concatAST, Kind } from 'graphql';\nimport { VueApolloVisitor } from './visitor';\nimport { extname } from 'path';\nexport const plugin = (schema, documents, config) => {\n    const allAst = concatAST(documents.map(s => s.document));\n    const allFragments = [\n        ...allAst.definitions.filter(d => d.kind === Kind.FRAGMENT_DEFINITION).map(fragmentDef => ({\n            node: fragmentDef,\n            name: fragmentDef.name.value,\n            onType: fragmentDef.typeCondition.name.value,\n            isExternal: false,\n        })),\n        ...(config.externalFragments || []),\n    ];\n    const visitor = new VueApolloVisitor(schema, allFragments, config, documents);\n    const visitorResult = visit(allAst, { leave: visitor });\n    return {\n        prepend: visitor.getImports(),\n        content: [\n            visitor.fragments,\n            ...visitorResult.definitions.filter((definition) => typeof definition === 'string'),\n        ].join('\\n'),\n    };\n};\nexport const validate = async (_schema, _documents, _config, outputFile) => {\n    if (extname(outputFile) !== '.ts' && extname(outputFile) !== '.tsx') {\n        throw new Error(`Plugin \"vue-apollo\" requires extension to be \".ts\" or \".tsx\"!`);\n    }\n};\nexport { VueApolloVisitor };\n//# sourceMappingURL=index.js.map"],"names":["ClientSideBaseVisitor","getConfigValue","DocumentMode","pascalCase","concatAST","Kind","visit","extname"],"mappings":"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"}