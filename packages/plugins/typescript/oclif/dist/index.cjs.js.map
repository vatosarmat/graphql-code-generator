{"version":3,"file":"index.cjs.js","sources":["../../../dist/plugins/typescript/oclif/src/utils.js","../../../dist/plugins/typescript/oclif/src/visitor.js","../../../dist/plugins/typescript/oclif/src/index.js"],"sourcesContent":["export const getFlagConfigForVariableDefinition = (definition) => {\n    const { list, required, innerType } = getInnerType(definition.type);\n    const oclifType = mapVariableTypeToOclifType(innerType);\n    const parser = getParserForType(innerType);\n    return `${definition.variable.name.value}: flags.${oclifType}({\n  multiple: ${list},\n  required: ${required},${parser ? `\\n  parse: ${parser}` : ''}\n})`;\n};\n// Supply a custom parser for oclif flag configuration\nconst getParserForType = (type) => {\n    if (type.name.value === 'Float') {\n        return 'input => Number(input)';\n    }\n};\nconst mapVariableTypeToOclifType = (type) => {\n    if (type.name.value === 'Boolean') {\n        return 'boolean';\n    }\n    else if (['Float', 'Int'].includes(type.name.value)) {\n        // A quirk of oclif is that \"integer\" allows for any `number`-typed response, and then\n        //   we supply our own parsing function to make sure it's a float and not an integer\n        return 'integer';\n    }\n    else {\n        return 'string';\n    }\n};\n// Retrieve the inner type if nested within List and/or NonNull\nconst getInnerType = (type) => {\n    const result = {\n        list: false,\n        required: false,\n    };\n    let _type = type;\n    while (_type.kind !== 'NamedType') {\n        if (_type.kind === 'ListType') {\n            result.list = true;\n        }\n        else if (_type.kind === 'NonNullType') {\n            result.required = true;\n        }\n        _type = _type.type;\n    }\n    result.innerType = _type;\n    return result;\n};\n// remove all @oclif directives from the document for transmission to the server\nexport const omitOclifDirectives = (node) => {\n    const directives = node.directives.filter(directive => directive.name.value !== 'oclif');\n    return Object.assign({}, node, { directives });\n};\n//# sourceMappingURL=utils.js.map","import { ClientSideBaseVisitor, indentMultiline, } from '@graphql-codegen/visitor-plugin-common';\nimport autoBind from 'auto-bind';\nimport { print } from 'graphql';\nimport { getFlagConfigForVariableDefinition, omitOclifDirectives } from './utils';\nexport class GraphQLRequestVisitor extends ClientSideBaseVisitor {\n    constructor(schema, fragments, rawConfig, info) {\n        super(schema, fragments, rawConfig, {});\n        this._operationsToInclude = [];\n        this._info = info;\n        const { handlerPath = '../../handler' } = rawConfig;\n        // FIXME: This is taken in part from\n        //  presets/near-operation-file/src/index.ts:139. How do I build a path relative to the outputFile in the same way?\n        //  A plugin doesn't appear to have access to the same \"options.baseOutputDir\" that the preset does.\n        // const absClientPath = resolve(info.outputFile, join(options.baseOutputDir, options.presetConfig.baseTypesPath));\n        autoBind(this);\n        this._additionalImports.push(`import { Command, flags } from '@oclif/command'`);\n        this._additionalImports.push(`import handler from '${handlerPath}'`);\n    }\n    buildOperation(node, documentVariableName, operationType, operationResultType, operationVariablesTypes) {\n        this._operationsToInclude.push({\n            node,\n            documentVariableName,\n            operationType,\n            operationResultType,\n            operationVariablesTypes,\n        });\n        return null;\n    }\n    // Clean client-side content (ie directives) out of the GraphQL document prior to sending to the server\n    get definition() {\n        const operation = this._operationsToInclude[0];\n        const clientOperation = print(omitOclifDirectives(operation.node));\n        return `const ${operation.documentVariableName} = \\`\\n${clientOperation}\\``;\n    }\n    // Generate the code required for this CLI operation\n    get cliContent() {\n        if (this._operationsToInclude.length !== 1) {\n            throw new Error(`Each graphql document should have exactly one operation; found ${this._operationsToInclude.length} while generating ${this._info.outputFile}.`);\n        }\n        const operation = this._operationsToInclude[0];\n        // Find the @oclif directive in the client document, if it's there\n        const directive = operation.node.directives.find(directive => directive.name.value === 'oclif');\n        // Remap the directive's fields ie @oclif(description: \"a name\") to a more usable format\n        const directiveValues = {};\n        if (directive) {\n            directiveValues.examples = [];\n            directive.arguments.forEach(arg => {\n                const value = 'value' in arg.value ? arg.value.value.toString() : null;\n                const { value: name } = arg.name;\n                if (name === 'description') {\n                    directiveValues.description = value;\n                }\n                else if (name === 'example') {\n                    directiveValues.examples.push(value);\n                }\n                else {\n                    throw new Error(`Invalid field supplied to @oclif directive: ${name}`);\n                }\n            });\n        }\n        const { description, examples } = directiveValues;\n        const flags = operation.node.variableDefinitions.map(getFlagConfigForVariableDefinition);\n        return `\n${this.definition}\n\nexport default class ${operation.node.name.value} extends Command {\n  ${description ? `\\nstatic description = \"${description}\";\\n` : ''}\n  ${examples ? `\\nstatic examples: string[] = ${JSON.stringify(examples)};\\n` : ''}\n  static flags = {\n    help: flags.help({ char: 'h' }),\n${indentMultiline(flags.join(',\\n'), 2)}\n  };\n\n  async run() {\n    const { flags } = this.parse(${operation.node.name.value});\n    await handler({ command: this, query: ${operation.documentVariableName}, variables: flags });\n  }\n}\n`;\n    }\n}\n//# sourceMappingURL=visitor.js.map","import { visit, concatAST, Kind } from 'graphql';\nimport { GraphQLRequestVisitor } from './visitor';\nimport { extname } from 'path';\nexport const plugin = (schema, documents, config, info) => {\n    const allAst = concatAST(documents.reduce((prev, v) => {\n        return [...prev, v.document];\n    }, []));\n    const allFragments = [\n        ...allAst.definitions.filter(d => d.kind === Kind.FRAGMENT_DEFINITION).map(fragmentDef => ({\n            node: fragmentDef,\n            name: fragmentDef.name.value,\n            onType: fragmentDef.typeCondition.name.value,\n            isExternal: false,\n        })),\n        ...(config.externalFragments || []),\n    ];\n    const visitor = new GraphQLRequestVisitor(schema, allFragments, config, info);\n    visit(allAst, { leave: visitor });\n    return {\n        prepend: visitor.getImports(),\n        content: visitor.cliContent,\n    };\n};\nexport const validate = async (schema, documents, config, outputFile) => {\n    if (extname(outputFile) !== '.ts') {\n        throw new Error(`Plugin \"typescript-oclif\" requires output file extensions to be \".ts\"!`);\n    }\n};\nexport { GraphQLRequestVisitor };\n//# sourceMappingURL=index.js.map"],"names":["ClientSideBaseVisitor","print","indentMultiline","concatAST","Kind","visit","extname"],"mappings":"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"}