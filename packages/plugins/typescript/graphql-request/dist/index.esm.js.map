{"version":3,"file":"index.esm.js","sources":["../../../dist/plugins/typescript/graphql-request/src/visitor.js","../../../dist/plugins/typescript/graphql-request/src/index.js"],"sourcesContent":["import { ClientSideBaseVisitor, DocumentMode, getConfigValue, indentMultiline, } from '@graphql-codegen/visitor-plugin-common';\nimport autoBind from 'auto-bind';\nimport { Kind } from 'graphql';\nconst additionalExportedTypes = `\nexport type SdkFunctionWrapper = <T>(action: () => Promise<T>) => Promise<T>;\n`;\nexport class GraphQLRequestVisitor extends ClientSideBaseVisitor {\n    constructor(schema, fragments, rawConfig) {\n        super(schema, fragments, rawConfig, {\n            rawRequest: getConfigValue(rawConfig.rawRequest, false),\n        });\n        this._operationsToInclude = [];\n        autoBind(this);\n        const typeImport = this.config.useTypeImports ? 'import type' : 'import';\n        this._additionalImports.push(`${typeImport} { GraphQLClient } from 'graphql-request';`);\n        if (this.config.documentMode !== DocumentMode.string) {\n            this._additionalImports.push(`import { print } from 'graphql';`);\n        }\n        if (this.config.rawRequest) {\n            this._additionalImports.push(`${typeImport} { GraphQLError } from 'graphql-request/dist/types';`);\n        }\n    }\n    buildOperation(node, documentVariableName, operationType, operationResultType, operationVariablesTypes) {\n        this._operationsToInclude.push({\n            node,\n            documentVariableName,\n            operationType,\n            operationResultType,\n            operationVariablesTypes,\n        });\n        return null;\n    }\n    get sdkContent() {\n        const allPossibleActions = this._operationsToInclude\n            .map(o => {\n            const optionalVariables = !o.node.variableDefinitions ||\n                o.node.variableDefinitions.length === 0 ||\n                o.node.variableDefinitions.every(v => v.type.kind !== Kind.NON_NULL_TYPE || v.defaultValue);\n            const doc = this.config.documentMode === DocumentMode.string\n                ? o.documentVariableName\n                : `print(${o.documentVariableName})`;\n            if (this.config.rawRequest) {\n                return `${o.node.name.value}(variables${optionalVariables ? '?' : ''}: ${o.operationVariablesTypes}): Promise<{ data?: ${o.operationResultType} | undefined; extensions?: any; headers: Headers; status: number; errors?: GraphQLError[] | undefined; }> {\n    return withWrapper(() => client.rawRequest<${o.operationResultType}>(${doc}, variables));\n}`;\n            }\n            else {\n                return `${o.node.name.value}(variables${optionalVariables ? '?' : ''}: ${o.operationVariablesTypes}): Promise<${o.operationResultType}> {\n  return withWrapper(() => client.request<${o.operationResultType}>(${doc}, variables));\n}`;\n            }\n        })\n            .map(s => indentMultiline(s, 2));\n        return `${additionalExportedTypes}\n\nconst defaultWrapper: SdkFunctionWrapper = sdkFunction => sdkFunction();\nexport function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {\n  return {\n${allPossibleActions.join(',\\n')}\n  };\n}\nexport type Sdk = ReturnType<typeof getSdk>;`;\n    }\n}\n//# sourceMappingURL=visitor.js.map","import { visit, concatAST, Kind } from 'graphql';\nimport { GraphQLRequestVisitor } from './visitor';\nimport { extname } from 'path';\nexport const plugin = (schema, documents, config) => {\n    const allAst = concatAST(documents.map(v => v.document));\n    const allFragments = [\n        ...allAst.definitions.filter(d => d.kind === Kind.FRAGMENT_DEFINITION).map(fragmentDef => ({\n            node: fragmentDef,\n            name: fragmentDef.name.value,\n            onType: fragmentDef.typeCondition.name.value,\n            isExternal: false,\n        })),\n        ...(config.externalFragments || []),\n    ];\n    const visitor = new GraphQLRequestVisitor(schema, allFragments, config);\n    const visitorResult = visit(allAst, { leave: visitor });\n    return {\n        prepend: visitor.getImports(),\n        content: [\n            visitor.fragments,\n            ...visitorResult.definitions.filter(t => typeof t === 'string'),\n            visitor.sdkContent,\n        ].join('\\n'),\n    };\n};\nexport const validate = async (schema, documents, config, outputFile) => {\n    if (extname(outputFile) !== '.ts') {\n        throw new Error(`Plugin \"typescript-graphql-request\" requires extension to be \".ts\"!`);\n    }\n};\nexport { GraphQLRequestVisitor };\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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"}